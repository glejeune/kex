#!/bin/sh

# Copyright (c) 2014, 2015 Gregoire Lejeune <gregoire.lejeune@free.fr>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

KEX_VERSION="0.0.4"
KEX_BASE_DIR="$HOME/.kex"
KEX_CONFIG="$HOME/.kexrc"
KEX_SOURCE_DIR="$KEX_BASE_DIR/git"
KEX_LOCAL="$KEX_SOURCE_DIR/elixir"
KEX_INSTALL="$KEX_BASE_DIR/installs"
KEX_INSTALLATIONS="$KEX_BASE_DIR/kex_installations"
KEX_REMOTE="https://github.com/elixir-lang/elixir.git"
KEX_BIN_REMOTE="https://raw.githubusercontent.com/glejeune/kex/master/kex"
GIT="git -C $KEX_LOCAL"
MAKE="make -C $KEX_LOCAL"
KEX_SCRIPT="$0"

__kex_program_exist() {
  if which $1 >/dev/null; then
    return 0
  else
    return 1
  fi
}

kex_help() {
  echo "kex v$KEX_VERSION - build and install Elixir"
  echo "usage: $KEX_SCRIPT <command>"
  echo ""
  echo "Commands:"
  echo ""
  echo "list                     list availables versions"
  echo "list-installs            list installed versions"
  echo "update                   update availables versions"
  echo "install <version> [path] Install Elixir version <version>"
  echo "delete <version>         Uninstall Elixir version <version>"
  echo "upgrade                  Upgrade to it last version"
  echo "status                   Print kex status"
  exit 1
}

kex_list() {
  echo "Available versions:"
  $GIT tag | xargs
}

kex_update() {
  echo "Updating..."
  $GIT pull -q
}

kex_installed() {
  if [ ! -f $KEX_INSTALLATIONS ] ; then
    for V in $(ls "$KEX_INSTALL") ; do
      echo "$V $KEX_INSTALL/$V" >> $KEX_INSTALLATIONS
    done
  fi
  cat $KEX_INSTALLATIONS
}

kex_faild() {
  echo "Build faild!"
  exit 1
}

kex_install() {
  if $GIT checkout "$1" -q 2>/dev/null ; then
    if [ "x$2" = "x" ] ; then
      KEX_INSTALL_DIR="$KEX_INSTALL/$1"
    else
      KEX_INSTALL_DIR="$2"
    fi
    KEX_INSTALL_DIR_BASE=$(basename "$KEX_INSTALL_DIR")
    KEX_INSTALL_DIR_ROOT=$(dirname "$KEX_INSTALL_DIR")
    KEX_INSTALL_DIR_ROOT=$(cd "$KEX_INSTALL_DIR_ROOT"; pwd)
    KEX_INSTALL_DIR="$KEX_INSTALL_DIR_ROOT/$KEX_INSTALL_DIR_BASE"
    echo "Installing Elixir $1 in $KEX_INSTALL_DIR"
    $MAKE PREFIX="$KEX_INSTALL_DIR" 2>&1 1> "$KEX_BASE_DIR/kex_install.log" || kex_faild
    mkdir -p "$(dirname $KEX_INSTALL_DIR)" 2>&1 1>> "$KEX_BASE_DIR/kex_install.log" || kex_faild
    $MAKE PREFIX="$KEX_INSTALL_DIR" install 2>&1 1>> "$KEX_BASE_DIR/kex_install.log" || kex_faild
    $MAKE clean 2>&1 1> /dev/null
    cat <<ACTIVATE > "$KEX_INSTALL_DIR/activate"
kex_deactivate() {
  if [ -n "\$_KEX_PATH_REMOVABLE" ]; then
    PATH=\${PATH//\${_KEX_PATH_REMOVABLE}:/}
    export PATH
    unset _KEX_PATH_REMOVABLE
  fi
  if [ -n "\$BASH" -o -n "\$ZSH_VERSION" ]; then
    hash -r
  fi
  if [ ! "\$1" = "nondestructive" ]; then
    unset -f kex_deactivate
  fi
}

kex_deactivate nondestructive
_KEX_PATH_REMOVABLE="$KEX_INSTALL_DIR/bin"
PATH="\${_KEX_PATH_REMOVABLE}:\$PATH"
export PATH _KEX_PATH_REMOVABLE
if [ -n "\$BASH" -o -n "\$ZSH_VERSION" ]; then
  hash -r
fi
ACTIVATE
    $GIT checkout master -q
    echo "You can activate this installation running the following command:"
    echo ". $KEX_INSTALL_DIR/activate"
    echo "Later on, you can leave the installation typing:"
    echo "kex_deactivate"
    echo "$1 $KEX_INSTALL_DIR" >> $KEX_INSTALLATIONS
  else
    echo "Version $1 does not exist!"
  fi
}

kex_delete() {
  KEX_INSTALL_PATH=$(cat "$KEX_INSTALLATIONS" | grep "^$1" | awk '{print $2}')
  echo "Delete Elixir installation $1 from $KEX_INSTALL_PATH"
  rm -rf "$KEX_INSTALL_PATH"
  cat "$KEX_INSTALLATIONS" | grep -v "$KEX_INSTALL_PATH" > "$KEX_INSTALLATIONS.new"
  mv "$KEX_INSTALLATIONS.new" "$KEX_INSTALLATIONS"
}

kex_upgrade() {
  echo "Upgrade kex..."
  curl -s https://raw.githubusercontent.com/glejeune/kex/master/kex -o "$KEX_SCRIPT"
}

kex_status() {
  if [ -n "$_KEX_PATH_REMOVABLE" ] ; then
    RUNNING_PATH=$(dirname "$_KEX_PATH_REMOVABLE")
    while IFS='' read -r LINE ; do
      CURRENT_PATH=$(echo $LINE | awk '{print $2}')
      case "$CURRENT_PATH" in
        $RUNNING_PATH)
          echo "=> $LINE"
          ;;
        *)
          echo "   $LINE"
          ;;
      esac
    done < "$KEX_INSTALLATIONS"
  else
    echo "No Elixir kex installation is currently active"
  fi
}

if ! __kex_program_exist git; then
  echo "Can't find git!"
  exit 1
fi
if ! __kex_program_exist erl; then
  echo "Can't find Erlang!"
  exit 1
fi

mkdir -p "$KEX_INSTALL"
mkdir -p "$KEX_SOURCE_DIR"
if [ -f "$KEX_CONFIG" ]; then . "$KEX_CONFIG"; fi
if [ ! -d "$KEX_LOCAL" ]; then
  echo "Clone Elixir repo..."
  git clone -q "$KEX_REMOTE" "$KEX_LOCAL"
fi

case "$1" in
  list)
    kex_list
    ;;
  update)
    kex_update
    ;;
  help)
    kex_help
    ;;
  list-installs)
    kex_installed
    ;;
  install)
    kex_install "$2" "$3"
    ;;
  delete)
    kex_delete "$2"
    ;;
  upgrade)
    kex_upgrade
    ;;
  status)
    kex_status
    ;;
  *)
    kex_help
    ;;
esac


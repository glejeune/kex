#!/bin/sh

# Copyright (c) 2014 Gregoire Lejeune <gregoire.lejeune@free.fr>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

KEX_BASE_DIR="$HOME/.kex"
KEX_CONFIG="$HOME/.kexrc"
KEX_SOURCE_DIR="$KEX_BASE_DIR/git"
KEX_LOCAL="$KEX_SOURCE_DIR/elixir"
KEX_INSTALL="$KEX_BASE_DIR/installs"
KEX_REMOTE="https://github.com/elixir-lang/elixir.git"
GIT="git -C $KEX_LOCAL"
MAKE="make -C $KEX_LOCAL"

__kex_program_exist() {
  if which $1 >/dev/null; then
    return 0
  else
    return 1
  fi
}

kex_help() {
  echo "kex: build and install Elixir"
  exit 1
}

kex_list() {
  echo "Available versions:"
  $GIT tag
}

kex_update() {
  echo "Updating..."
  $GIT pull -q 
}

kex_install() {
  if $GIT checkout "$1" -q 2>/dev/null ; then
    echo "Install Elixir $1"
    $MAKE PREFIX="$KEX_INSTALL/$1"
    mkdir -p "$KEX_INSTALL"
    $MAKE PREFIX="$KEX_INSTALL/$1" install
    $MAKE clean
    cat <<ACTIVATE > "$KEX_INSTALL/$1/activate"
kex_deactivate() {
  if [ -n "\$_KEX_PATH_REMOVABLE" ]; then
    PATH=\${PATH//\${_KEX_PATH_REMOVABLE}:/}
    export PATH
    unset _KEX_PATH_REMOVABLE
  fi
  if [ -n "\$BASH" -o -n "\$ZSH_VERSION" ]; then
    hash -r
  fi
  if [ ! "\$1" = "nondestructive" ]; then
    unset -f kerl_deactivate
  fi
}

kex_deactivate nondestructive
_KEX_PATH_REMOVABLE="$KEX_INSTALL/$1/bin"
PATH="\${_KEX_PATH_REMOVABLE}:$PATH"
export PATH _KEX_PATH_REMOVABLE
if [ -n "\$BASH" -o -n "\$ZSH_VERSION" ]; then
  hash -r
fi
ACTIVATE
    $GIT checkout master -q  
    echo "You can activate this installation running the following command:"
    echo ". $KEX_INSTALL/$1/activate"
    echo "Later on, you can leave the installation typing:"
    echo "kex_deactivate"
  else
    echo "Version $1 does not exist!"
  fi
}

if ! __kex_program_exist git; then
  echo "Can't find git!"
  exit 1
fi
if ! __kex_program_exist erl; then
  echo "Can't find Erlang!"
  exit 1
fi

mkdir -p "$KEX_SOURCE_DIR"
if [ -f "$KEX_CONFIG" ]; then . "$KEX_CONFIG"; fi
if [ ! -d "$KEX_LOCAL" ]; then
  echo "Clone Elixir repo..."
  git clone -q "$KEX_REMOTE" "$KEX_LOCAL" 
fi

case "$1" in
  list)
    kex_list
    ;;
  update)
    kex_update
    ;;
  help)
    kex_help
    ;;
  install)
    kex_install "$2"
    ;;
esac
